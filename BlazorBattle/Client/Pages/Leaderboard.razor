@page "/leaderboard"
@inject ILeaderboardService LeaderboardService
@inject AuthenticationStateProvider AuthStateProvider
@inject IBattleService BattleService
@inject IBananaService BananaService
@inject IToastService ToastService
@inject NavigationManager NavigationManager

<h3>Leaderboard</h3>

@if (LeaderboardService.Leaderboard == null)
{
    <span>Loading Leaderboard...</span>
}
else
{
    <table class="table">
        <thead>
            <tr>
                <td>Rank</td>
                <td>User</td>
                <td>Victories</td>
                <td>Defeats</td>
                <td>Battles</td>
                <td></td>
            </tr>
        </thead>
        <tbody>
            @foreach (var entry in LeaderboardService.Leaderboard)
            {
                <tr style="@GetMyStyle(entry.UserId)">
                    <td>@entry.Rank</td>
                    <td>@entry.Username</td>
                    <td>@entry.Victories</td>
                    <td>@entry.Defeats</td>
                    <td>@entry.Battles</td>
                    <td>
                        @if (entry.UserId != myUserId)
                        {
                            <button class="btn btn-primary" @onclick="@(()=> StartBattle(entry))">Fight!</button>
                        }
                    </td>
                </tr>
            }
        </tbody>
    </table>
}

@code {
    int myUserId;
    protected override async Task OnInitializedAsync()
    {
        await LeaderboardService.GetLeaderboard();

        var authState = await AuthStateProvider.GetAuthenticationStateAsync();
        myUserId = int.Parse(authState.User.FindFirst(System.Security.Claims.ClaimTypes.NameIdentifier).Value);
    }

    public string GetMyStyle(int userId)
    {
        if (userId == myUserId)
            return "color: green; font-weight:600;background: #00800024;";
        else
            return string.Empty;
    }

    public async Task StartBattle(UserStatistics opponenetId)
    {
        ToastService.ShowInfo($"Start Battle with {opponenetId.Username}");
        var result = await BattleService.StartBattle(opponenetId.UserId);
        if (result.RoundsFought <= 0)
            ToastService.ShowInfo("The battle did not take place!");
        else if (result.IsVictory)
            ToastService.ShowSuccess("You won the battle!");
        else
            ToastService.ShowWarning("You have been Destroyed!");

        await LeaderboardService.GetLeaderboard();
        await BananaService.GetBananas();

        if (result.RoundsFought > 0)
            NavigationManager.NavigateTo("battlelog");
    }

}
